
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package geographic_wifi;

import java.text.SimpleDateFormat;
import java.io.*;
import java.util.*;
import Wifi_Data.*;
import General.*;
import Algorithms.*;
import Filter.*;

/**
 * * This class is responsible for the actions that can be executed in the GUI of this project. It uses all the other packages and
 * classes in this project to execute the actions with the existing code written in this project.
 * We can relate to this class as the 'wrapper' of the project, allowing all actions to be made by the GUI, although it also includes 
 * all the definitions of the GUI.
 * @author HodayaTamano&ShirBentabou
 */
public class geo_wifi extends javax.swing.JFrame {
    final static String all_dataPath = "Input Files/all_data.csv";
    static ArrayList<Row> all_data = new ArrayList<Row>();
    /**
     * Creates new form geo_wifi
     */
    public geo_wifi() {
        initComponents();
        all_data = Csv.csv_to_file(all_dataPath);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Time_Group = new javax.swing.ButtonGroup();
        Location_Group = new javax.swing.ButtonGroup();
        Id_Group = new javax.swing.ButtonGroup();
        TabbedPanel = new javax.swing.JTabbedPane();
        Algorithm = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Execute_Algo1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        row_from_gui = new javax.swing.JTextField();
        Execute_Algo2_Row = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        Execute_Algo2_Macs = new javax.swing.JButton();
        mac1 = new javax.swing.JFormattedTextField();
        mac2 = new javax.swing.JFormattedTextField();
        mac3 = new javax.swing.JFormattedTextField();
        mac_Algo1 = new javax.swing.JFormattedTextField();
        signal1 = new javax.swing.JFormattedTextField();
        signal2 = new javax.swing.JFormattedTextField();
        signal3 = new javax.swing.JFormattedTextField();
        lat_output_field = new javax.swing.JTextField();
        lon_output_field = new javax.swing.JTextField();
        alt_output_field = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        Input_Output = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        empty_file_button = new javax.swing.JButton();
        save_as_unified_button = new javax.swing.JButton();
        save_as_kml_button = new javax.swing.JButton();
        add_wigle_files_button = new javax.swing.JButton();
        path_wigle_files = new javax.swing.JTextField();
        path_csv_file = new javax.swing.JTextField();
        add_csv_file_button = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        num_rows = new javax.swing.JTextField();
        num_of_access_points = new javax.swing.JTextField();
        filter_info = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        csv_file_path_save = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        kml_path_file_save = new javax.swing.JTextField();
        Filter = new javax.swing.JPanel();
        Time_And = new javax.swing.JRadioButton();
        Time_Not = new javax.swing.JRadioButton();
        Time_NotUse = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        Start_time_filter = new javax.swing.JFormattedTextField();
        End_Time_filter = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        Location_NotUse = new javax.swing.JRadioButton();
        Location_And = new javax.swing.JRadioButton();
        Location_Not = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        location_lat_filter = new javax.swing.JFormattedTextField();
        location_lon_filter = new javax.swing.JFormattedTextField();
        location_alt_filter = new javax.swing.JFormattedTextField();
        radius_units = new javax.swing.JFormattedTextField();
        jLabel15 = new javax.swing.JLabel();
        jBkjdkh = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        id_filter = new javax.swing.JFormattedTextField();
        Id_NotUse = new javax.swing.JRadioButton();
        Id_Not = new javax.swing.JRadioButton();
        Id_And = new javax.swing.JRadioButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        filter_execute_button = new javax.swing.JButton();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        SQL = new javax.swing.JPanel();
        jLabel_ip = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        ip_sql = new javax.swing.JFormattedTextField();
        port_sql = new javax.swing.JFormattedTextField();
        user_sql = new javax.swing.JTextField();
        password_sql = new javax.swing.JTextField();
        db_name = new javax.swing.JTextField();
        table_name = new javax.swing.JTextField();
        sql_execute = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Geographic_WIFI");
        setAlwaysOnTop(true);
        setName("home_frame"); // NOI18N

        jLabel1.setText("Enter MAC for Algorithm1:");

        Execute_Algo1.setActionCommand("Execute Algo1");
        Execute_Algo1.setLabel("Execute_Algo1");
        Execute_Algo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Execute_Algo1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Algorithm 2");

        jLabel3.setText("Enter a row - to calculate location:");

        Execute_Algo2_Row.setText("Execute Algo 2 on row");
        Execute_Algo2_Row.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Execute_Algo2_RowActionPerformed(evt);
            }
        });

        jLabel4.setText("Enter 3 macs & signals:");

        Execute_Algo2_Macs.setText("Execute Algo 2 on macs");
        Execute_Algo2_Macs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Execute_Algo2_MacsActionPerformed(evt);
            }
        });

        try {
            mac1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("HH:HH:HH:HH:HH:HH")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            mac2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("HH:HH:HH:HH:HH:HH")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            mac3.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("HH:HH:HH:HH:HH:HH")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            mac_Algo1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("HH:HH:HH:HH:HH:HH")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        mac_Algo1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                mac_Algo1CaretUpdate(evt);
            }
        });

        try {
            signal1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            signal2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            signal3.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel29.setText("RESULTS:");

        jLabel30.setText("Lat:");

        jLabel31.setText("Lon:");

        jLabel32.setText("Alt:");

        javax.swing.GroupLayout AlgorithmLayout = new javax.swing.GroupLayout(Algorithm);
        Algorithm.setLayout(AlgorithmLayout);
        AlgorithmLayout.setHorizontalGroup(
            AlgorithmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AlgorithmLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(AlgorithmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AlgorithmLayout.createSequentialGroup()
                        .addGroup(AlgorithmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AlgorithmLayout.createSequentialGroup()
                        .addGroup(AlgorithmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(AlgorithmLayout.createSequentialGroup()
                                .addGroup(AlgorithmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mac_Algo1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Execute_Algo1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(AlgorithmLayout.createSequentialGroup()
                                .addGroup(AlgorithmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(AlgorithmLayout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(AlgorithmLayout.createSequentialGroup()
                                        .addComponent(row_from_gui)
                                        .addGap(142, 142, 142))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AlgorithmLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(signal2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(65, 65, 65))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AlgorithmLayout.createSequentialGroup()
                                        .addGroup(AlgorithmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(mac2, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                                            .addComponent(mac1)
                                            .addComponent(mac3))
                                        .addGroup(AlgorithmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AlgorithmLayout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(signal3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(AlgorithmLayout.createSequentialGroup()
                                                .addGap(60, 60, 60)
                                                .addComponent(signal1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(65, 65, 65)))
                                .addGroup(AlgorithmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Execute_Algo2_Macs, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Execute_Algo2_Row, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(44, 44, 44))))
            .addGroup(AlgorithmLayout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jLabel29)
                .addGap(37, 37, 37)
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lat_output_field, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lon_output_field, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel32)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(alt_output_field, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        AlgorithmLayout.setVerticalGroup(
            AlgorithmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AlgorithmLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AlgorithmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mac_Algo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Execute_Algo1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AlgorithmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(row_from_gui, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Execute_Algo2_Row))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AlgorithmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mac1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(signal1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AlgorithmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Execute_Algo2_Macs)
                    .addComponent(mac2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(signal2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AlgorithmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mac3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(signal3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(AlgorithmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(lat_output_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lon_output_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(alt_output_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30)
                    .addComponent(jLabel31)
                    .addComponent(jLabel32))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        TabbedPanel.addTab("Algorithms", Algorithm);
        Algorithm.getAccessibleContext().setAccessibleName("");

        jLabel23.setText("Folder of Wigle files (whole path):");

        jLabel24.setText("Enter whole path of unified CSV file:");

        empty_file_button.setText("Empty all_data.csv");
        empty_file_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empty_file_buttonActionPerformed(evt);
            }
        });

        save_as_unified_button.setText("Save as unified CSV");
        save_as_unified_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_as_unified_buttonActionPerformed(evt);
            }
        });

        save_as_kml_button.setText("Save as KML file");
        save_as_kml_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_as_kml_buttonActionPerformed(evt);
            }
        });

        add_wigle_files_button.setText("Add");
        add_wigle_files_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_wigle_files_buttonActionPerformed(evt);
            }
        });

        path_wigle_files.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                path_wigle_filesInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });

        add_csv_file_button.setText("Add");
        add_csv_file_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_csv_file_buttonActionPerformed(evt);
            }
        });

        jLabel25.setText("INFO:");

        jLabel26.setText("Num. of rows:");

        jLabel27.setText("Num. of access points:");

        jLabel28.setText("Filter info:");

        jLabel33.setText("Enter path:");

        jLabel34.setText("Enter path:");

        javax.swing.GroupLayout Input_OutputLayout = new javax.swing.GroupLayout(Input_Output);
        Input_Output.setLayout(Input_OutputLayout);
        Input_OutputLayout.setHorizontalGroup(
            Input_OutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Input_OutputLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(Input_OutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Input_OutputLayout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(Input_OutputLayout.createSequentialGroup()
                        .addGroup(Input_OutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(path_csv_file)
                            .addComponent(path_wigle_files, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(Input_OutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(add_wigle_files_button, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(add_csv_file_button, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(89, 89, 89))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Input_OutputLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(empty_file_button)
                .addGap(88, 88, 88)
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel34)
                .addGap(105, 105, 105))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Input_OutputLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(Input_OutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Input_OutputLayout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(num_of_access_points, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(filter_info, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Input_OutputLayout.createSequentialGroup()
                        .addGroup(Input_OutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(kml_path_file_save, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(save_as_kml_button, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(73, 73, 73))))
            .addGroup(Input_OutputLayout.createSequentialGroup()
                .addGroup(Input_OutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Input_OutputLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Input_OutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Input_OutputLayout.createSequentialGroup()
                                .addGap(132, 132, 132)
                                .addGroup(Input_OutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(save_as_unified_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(csv_file_path_save)))
                            .addComponent(num_rows, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(Input_OutputLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel23))
                    .addGroup(Input_OutputLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel24)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Input_OutputLayout.setVerticalGroup(
            Input_OutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Input_OutputLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Input_OutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add_wigle_files_button)
                    .addComponent(path_wigle_files, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Input_OutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Input_OutputLayout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(jLabel25))
                    .addGroup(Input_OutputLayout.createSequentialGroup()
                        .addGroup(Input_OutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(path_csv_file, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(add_csv_file_button))
                        .addGap(28, 28, 28)
                        .addGroup(Input_OutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(save_as_unified_button)
                            .addComponent(save_as_kml_button))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Input_OutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel33)
                            .addComponent(empty_file_button)
                            .addComponent(jLabel34))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(Input_OutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(csv_file_path_save, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(kml_path_file_save, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 27, Short.MAX_VALUE)
                .addGroup(Input_OutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(num_rows, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filter_info, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(num_of_access_points, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26)
                    .addComponent(jLabel27)
                    .addComponent(jLabel28))
                .addGap(24, 24, 24))
        );

        TabbedPanel.addTab("Input_Output", Input_Output);

        Time_Group.add(Time_And);

        Time_Group.add(Time_Not);

        Time_Group.add(Time_NotUse);
        Time_NotUse.setSelected(true);
        Time_NotUse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Time_NotUseActionPerformed(evt);
            }
        });

        jLabel5.setText("Time");

        jLabel6.setText("Don't use");

        jLabel7.setText("And");

        jLabel8.setText("Not");

        try {
            Start_time_filter.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-##-## ##:##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            End_Time_filter.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-##-## ##:##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel10.setText("Location");

        Location_Group.add(Location_NotUse);
        Location_NotUse.setSelected(true);

        Location_Group.add(Location_And);

        Location_Group.add(Location_Not);

        jLabel11.setText("Don't Use");

        jLabel12.setText("And");

        jLabel13.setText("Not");

        try {
            location_lat_filter.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            location_lon_filter.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        location_alt_filter.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        location_alt_filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                location_alt_filterActionPerformed(evt);
            }
        });

        radius_units.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        radius_units.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radius_unitsActionPerformed(evt);
            }
        });

        jLabel15.setText("ID");

        jBkjdkh.setText("Radius units:");

        jLabel17.setText("Lat:");

        jLabel18.setText("Lon:");

        jLabel19.setText("Alt:");

        Id_Group.add(Id_NotUse);
        Id_NotUse.setSelected(true);

        Id_Group.add(Id_Not);

        Id_Group.add(Id_And);

        jLabel16.setText("Don't Use");

        jLabel20.setText("Not");

        jLabel21.setText("And");

        filter_execute_button.setText("Execute");
        filter_execute_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					filter_execute_buttonActionPerformed(evt);
				} catch (FileNotFoundException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        jLabel35.setText("saved to");

        jLabel36.setText("Input Files");

        jLabel37.setText("folder!");

        javax.swing.GroupLayout FilterLayout = new javax.swing.GroupLayout(Filter);
        Filter.setLayout(FilterLayout);
        FilterLayout.setHorizontalGroup(
            FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FilterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FilterLayout.createSequentialGroup()
                        .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FilterLayout.createSequentialGroup()
                                .addComponent(Start_time_filter, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(End_Time_filter, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(FilterLayout.createSequentialGroup()
                                .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(FilterLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jBkjdkh)
                                        .addGap(18, 18, 18)
                                        .addComponent(radius_units, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(FilterLayout.createSequentialGroup()
                                        .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, FilterLayout.createSequentialGroup()
                                                .addComponent(location_lat_filter, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(location_lon_filter, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, FilterLayout.createSequentialGroup()
                                                .addGap(34, 34, 34)
                                                .addComponent(jLabel17)
                                                .addGap(89, 89, 89)
                                                .addComponent(jLabel18)))
                                        .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(FilterLayout.createSequentialGroup()
                                                .addGap(36, 36, 36)
                                                .addComponent(location_alt_filter, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(FilterLayout.createSequentialGroup()
                                                .addGap(65, 65, 65)
                                                .addComponent(jLabel19)))))
                                .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FilterLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FilterLayout.createSequentialGroup()
                                                .addComponent(Location_NotUse)
                                                .addGap(67, 67, 67)
                                                .addComponent(Location_Not))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FilterLayout.createSequentialGroup()
                                                .addComponent(Time_NotUse)
                                                .addGap(90, 90, 90))))
                                    .addGroup(FilterLayout.createSequentialGroup()
                                        .addGap(35, 35, 35)
                                        .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel6))
                                        .addGap(18, 18, 18)
                                        .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(FilterLayout.createSequentialGroup()
                                                .addComponent(jLabel12)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel13))
                                            .addGroup(FilterLayout.createSequentialGroup()
                                                .addComponent(jLabel7)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel8))
                                            .addGroup(FilterLayout.createSequentialGroup()
                                                .addComponent(Time_And)
                                                .addGap(18, 18, 18)
                                                .addComponent(Time_Not)
                                                .addGap(0, 0, Short.MAX_VALUE)))))))
                        .addGap(36, 36, 36)
                        .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(filter_execute_button)
                            .addGroup(FilterLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel37)
                                    .addComponent(jLabel35)
                                    .addComponent(jLabel36))))
                        .addGap(20, 20, 20))
                    .addGroup(FilterLayout.createSequentialGroup()
                        .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addGroup(FilterLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(id_filter, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(FilterLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(Id_NotUse))
                            .addComponent(jLabel16))
                        .addGap(18, 18, 18)
                        .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Location_And)
                            .addGroup(FilterLayout.createSequentialGroup()
                                .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Id_And)
                                    .addComponent(jLabel21))
                                .addGap(18, 18, 18)
                                .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20)
                                    .addComponent(Id_Not))))
                        .addGap(127, 127, 127))
                    .addGroup(FilterLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        FilterLayout.setVerticalGroup(
            FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FilterLayout.createSequentialGroup()
                .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FilterLayout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(End_Time_filter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Start_time_filter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(FilterLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5))
                    .addGroup(FilterLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Time_Not)
                            .addComponent(Time_And)
                            .addComponent(Time_NotUse))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FilterLayout.createSequentialGroup()
                        .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(FilterLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(filter_execute_button))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, FilterLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jBkjdkh)
                                    .addComponent(radius_units, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FilterLayout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel17))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(location_lat_filter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(location_lon_filter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FilterLayout.createSequentialGroup()
                                        .addComponent(location_alt_filter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(3, 3, 3))))
                            .addGroup(FilterLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel35)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel36)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel37))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FilterLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Location_And)
                            .addComponent(Location_NotUse)
                            .addComponent(Location_Not))
                        .addGap(60, 60, 60)))
                .addGap(35, 35, 35)
                .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Id_And)
                    .addGroup(FilterLayout.createSequentialGroup()
                        .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(jLabel20)
                            .addComponent(jLabel15)
                            .addComponent(jLabel21))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(FilterLayout.createSequentialGroup()
                                    .addComponent(id_filter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(1, 1, 1))
                                .addComponent(Id_NotUse, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(Id_Not, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        TabbedPanel.addTab("Filter", Filter);

        jLabel_ip.setText("IP:");

        jLabel14.setText("Port:");

        jLabel22.setText("User:");

        jLabel38.setText("Password:");

        jLabel39.setText("DB Name:");

        jLabel40.setText("Table Name:");

        try {
            ip_sql.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###.###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ip_sql.setText("005.029.193.052");

        port_sql.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        port_sql.setText("3306");

        user_sql.setText("oop1");

        password_sql.setText("Lambda1();");
        password_sql.setToolTipText("");

        db_name.setText("oop_course_ariel");

        table_name.setText("ex4_db");

        sql_execute.setText("Execute");
        sql_execute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sql_executeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SQLLayout = new javax.swing.GroupLayout(SQL);
        SQL.setLayout(SQLLayout);
        SQLLayout.setHorizontalGroup(
            SQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SQLLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(SQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(SQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SQLLayout.createSequentialGroup()
                            .addComponent(jLabel38)
                            .addGap(18, 18, 18)
                            .addComponent(password_sql))
                        .addGroup(SQLLayout.createSequentialGroup()
                            .addComponent(jLabel40)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(table_name))
                        .addGroup(SQLLayout.createSequentialGroup()
                            .addComponent(jLabel39)
                            .addGap(18, 18, 18)
                            .addComponent(db_name)))
                    .addGroup(SQLLayout.createSequentialGroup()
                        .addGroup(SQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel_ip)
                            .addComponent(jLabel14)
                            .addComponent(jLabel22))
                        .addGap(42, 42, 42)
                        .addGroup(SQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(port_sql, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(user_sql, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ip_sql, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(121, 121, 121)
                .addComponent(sql_execute, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(91, Short.MAX_VALUE))
        );
        SQLLayout.setVerticalGroup(
            SQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SQLLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(SQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_ip)
                    .addComponent(ip_sql, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(SQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(port_sql, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(SQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(user_sql, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(SQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SQLLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(SQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel38)
                            .addComponent(password_sql, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(SQLLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(sql_execute)))
                .addGap(32, 32, 32)
                .addGroup(SQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(db_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(SQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(table_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        jLabel_ip.getAccessibleContext().setAccessibleName("");

        TabbedPanel.addTab("SQL", SQL);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabbedPanel)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabbedPanel)
        );

        TabbedPanel.getAccessibleContext().setAccessibleName("TabbedPanel");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * This function defines the actions to be made when the user presses the "Execute_Algo1" button in the GUI.
     * Once pressed, the text in the text field under "Enter MAC for Algorithm 1:" is taken, transfered to lower case letters and 
     * the location for the specific mac is calculated using Algorithm1 ap_location function.
     * @param evt
     */
    private void Execute_Algo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Execute_Algo1ActionPerformed
        // TODO add your handling code here:
        ArrayList<Wifi_Scan> ws_list = new ArrayList<Wifi_Scan>();
        double [] loc = new double[3];
        String mac = mac_Algo1.getText();
        String correct_mac = "";
        for(int i=0; i<mac.length(); i++){
        	if (Character.isLetter(mac.charAt(i)))
        		correct_mac+=Character.toLowerCase(mac.charAt(i));
        	else
        		correct_mac+=mac.charAt(i);
        }
        System.out.println(correct_mac);
        ws_list = Wifi_Scans.numOfPoints(all_data, correct_mac, 4);
        loc = Algorithm1.ap_location(ws_list);
        lat_output_field.setText(Double.toString(loc[0]));
        lon_output_field.setText(Double.toString(loc[1]));
        alt_output_field.setText(Double.toString(loc[2]));
    }//GEN-LAST:event_Execute_Algo1ActionPerformed

    private void mac_Algo1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_mac_Algo1CaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_mac_Algo1CaretUpdate

    private void radius_unitsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radius_unitsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radius_unitsActionPerformed

    private void location_alt_filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_location_alt_filterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_location_alt_filterActionPerformed
	/**
     * This function defines the actions to be made when the user presses the"Execute Algo2 on Macs" button in the Algorithms panel in GUI.
     * Once the user hits the button, all the data from the relevant text fields are inserted to variables and to a temporary Row object,
     * and the location for it is calculated in Algorithm 2.
     * @param evt
     */
    private void Execute_Algo2_MacsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Execute_Algo2_MacsActionPerformed
        // TODO add your handling code here:
            	double loc [] = new double [3];
    	String m1 = mac1.getText();
    	String correct_m1="";
    	for(int i=0; i<m1.length(); i++){
        	if (Character.isLetter(m1.charAt(i)))
        		correct_m1+=Character.toLowerCase(m1.charAt(i));
        	else
        		correct_m1+=m1.charAt(i);
        }
    	String m2 = mac2.getText();
    	String correct_m2="";
    	for(int i=0; i<m2.length(); i++){
        	if (Character.isLetter(m2.charAt(i)))
        		correct_m2+=Character.toLowerCase(m2.charAt(i));
        	else
        		correct_m2+=m2.charAt(i);
        }
    	String m3 = mac3.getText();
    	String correct_m3="";
    	for(int i=0; i<m3.length(); i++){
        	if (Character.isLetter(m3.charAt(i)))
        		correct_m3+=Character.toLowerCase(m3.charAt(i));
        	else
        		correct_m3+=m3.charAt(i);
        }
    	double s1 = Double.parseDouble(signal1.getText());
    	double s2 = Double.parseDouble(signal2.getText());
    	double s3 = Double.parseDouble(signal3.getText());
    	Row r = new Row();
    	ArrayList<Wifi> w = new ArrayList<Wifi>();
    	Wifi temp = new Wifi();
    	temp.setSignal(s1);
    	temp.setMac(correct_m1);
    	w.add(temp);
    	temp.setSignal(s2);
    	temp.setMac(correct_m2);
    	w.add(temp);
    	temp.setSignal(s3);
    	temp.setMac(correct_m3);
    	w.add(temp);
    	r.setWifi(w);
    	loc = Algorithm2.search_in_csv(r,all_data);
        lat_output_field.setText(Double.toString(loc[0]));
        lon_output_field.setText(Double.toString(loc[1]));
        alt_output_field.setText(Double.toString(loc[2]));

    }//GEN-LAST:event_Execute_Algo2_MacsActionPerformed

    private void path_wigle_filesInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_path_wigle_filesInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_path_wigle_filesInputMethodTextChanged
 	 /**
     * This function defines the actions to be made when the user presses the"Execute Algo2 on Row" button in the Algorithms panel.
     * Once the user hits the button, the text from the text field under "enter a row-to calculate location", the text is then 
     * turned into a Row object and the location for it is calculated in Algorithm 2.
     * @param evt
     */
    private void Execute_Algo2_RowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Execute_Algo2_RowActionPerformed
       // TODO add your handling code here:
		String row = row_from_gui.getText();

		double loc[] = new double [3];
		Row r = new Row();
		ArrayList<Wifi> w_list = new ArrayList<Wifi>();
		if (row!=null){
			String csvSplitBy = ",";
			String[] readline;
			readline = row.split(csvSplitBy);
			if (readline.length>=6){	//if first line content is smaller than 6
				r.setTime(readline[0]);
				r.setId(readline[1]);
				try{
					r.setWifi_count(Integer.parseInt(readline[5]));
					if (readline[2].isEmpty() || readline[3].isEmpty() ||  readline[4].isEmpty()){
						r.setLat(0);
						r.setLon(0);
						r.setAlt(0);
					}else{
						r.setLat(Double.parseDouble(readline[2]));
						r.setLon(Double.parseDouble(readline[3]));
						r.setAlt(Double.parseDouble(readline[4]));
					}
				}catch(NumberFormatException e){ 
					System.out.println("not at the format!");
				}

				for (int i=0; i<r.getWifi_count(); i++){
					Wifi w = new Wifi();
					w.setSsid(readline[6+i*4]);
					w.setMac(readline[7+i*4]);
					w.setFrequency(Integer.parseInt(readline[8+i*4]));
					w.setSignal(Double.parseDouble(readline[9+i*4]));
					w_list.add(w);
				}
				r.setWifi(w_list);

			}
			loc = Algorithm2.search_in_csv(r, all_data);
			lat_output_field.setText(Double.toString(loc[0]));
			lon_output_field.setText(Double.toString(loc[1]));
			alt_output_field.setText(Double.toString(loc[2]));
		}
	}//GEN-LAST:event_Execute_Algo2_RowActionPerformed

    /**
     * This function defines the actions to be done when the user presses the "Add" button on the left of "Folder of wigle files:",
     * in the "Input/Output" panel, where the user inserts the path to the wigle files he wants to add to the unified csv all_data.
     * @param evt
     */
    private synchronized static void toAddFolder(String path, String check){
        ArrayList<Row> to_add = new ArrayList<Row>();
        to_add = Csv.pass_to_table(path);
        for (int i=0; i<to_add.size(); i++)
            all_data.add(to_add.get(i));
        update_info();
        System.out.println(check);
    }
    /**
     * This function updates the information in the text fields in the Input/Output panel in GUI.
     */
    private synchronized static void update_info(){
    	num_rows.setText(Integer.toString(all_data.size()));
        Wifi_Scans w = new Wifi_Scans();
        w=Algorithm1.findMacScans(all_data); //this function locates all access points, we use it here to know how many there are
        num_of_access_points.setText(Integer.toString(w.getSize()));
    }
    
     /**
     * This function obtains the functionality once the add button for wigle files has been pressed in the GUI.
	 * Once pressed, the files are processed into one unified csv formatted file and added to all_data table.
     */
    private void add_wigle_files_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_wigle_files_buttonActionPerformed
       // TODO add your handling code here:
        String path = path_wigle_files.getText();
        toAddFolder(path, "button");
        File file = new File(path);
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
        String value = sdf.format(file.lastModified());
        folder.putIfAbsent(path, value);
        System.out.println(folder.toString());
        //needs to be repaired
        update_info();
    }//GEN-LAST:event_add_wigle_files_buttonActionPerformed
    
    /**
     * This function adds a csv unified formatted file from a path to our general table of this GUI and project, all_data.
     */
    private static void toAddFile(String path, String check){
        ArrayList<Row> to_add = new ArrayList<Row>();
        to_add = Csv.csv_to_file(path);
        for (int i=0; i<to_add.size(); i++)
            all_data.add(to_add.get(i));
        update_info();
        System.out.println(check);
    }
    
    /**
     * This function defines the actions that are made once the user presses the "Add" button by "Enter whole path of unified CSV file:"
     * in the Input/Output panel in the GUI. The file in the path is passed to an ArrayList of Row objects, then added to all_data.
     */
    private void add_csv_file_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_csv_file_buttonActionPerformed
        // TODO add your handling code here:
        String path = path_csv_file.getText();
       
        toAddFile(path, "button");
        
        File file = new File(path);
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
        String value = sdf.format(file.lastModified());
        System.out.println(path+"!!!!!!\n");
        files.putIfAbsent(path, value);
        System.out.println(files.toString());
        num_rows.setText(Integer.toString(all_data.size()));
        Wifi_Scans w = new Wifi_Scans();
        w=Algorithm1.findMacScans(all_data); //this function locates all access points, we use it here to know how many there are
        num_of_access_points.setText(Integer.toString(w.getSize()));
    }//GEN-LAST:event_add_csv_file_buttonActionPerformed
    
    /**
     * This function defines what is made once the "Empty all_data.csv" button in the Input/Output panel is pressed.
     * All rows from all_data are then erased, and the text fields with info about it are updated.
     */
    private void empty_file_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empty_file_buttonActionPerformed
        // TODO add your handling code here:
        for (int i=0; i<all_data.size(); i++)
            all_data.remove(i);
        num_rows.setText("0");
        num_of_access_points.setText("0");
        filter_info.setText("None");
    }//GEN-LAST:event_empty_file_buttonActionPerformed
    
    /**
     * This function defines the functionality of the "Save as Unified CSV" button in the Input/Output panel in the GUI.
     * Once pressed, all_data table is sent to csv.pass_to_table function with the path from the text field under the button and written to the path given by the user.
     */
    private void save_as_unified_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_as_unified_buttonActionPerformed
        // TODO add your handling code here:
        String path_output = csv_file_path_save.getText();
        if (path_output=="")
            csv_file_path_save.setText("Path not given!");
        else{
            Csv.pass_to_file(all_data, path_output);
        }
    }//GEN-LAST:event_save_as_unified_buttonActionPerformed
    
    /**
     * This function defines the functionality of the "Save as KML file" button in the Input/Output panel in the GUI.
     * Once pressed, all_data table is sent to kml_by_lib.pass_to_kml function with the path from the text field under the button and written to the path given by the user.
     */
    private void save_as_kml_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_as_kml_buttonActionPerformed
        // TODO add your handling code here:
//        String path_output = kml_path_file_save.getText();
//        if (path_output=="")
//            kml_path_file_save.setText("Path not given!");
//        else{
//            ArrayList<Row> kml_temp = new ArrayList<Row>();
//            kml_temp=pass_to_kml(all_dataPath);
//            kml_file(all_data, path_output);
//       }
    }//GEN-LAST:event_save_as_kml_buttonActionPerformed

    private void Time_NotUseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Time_NotUseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Time_NotUseActionPerformed

	 /**
     * This function is responsible for the Filter panel of our GUI. Once the user presses execute, it gathers all information of all filters 
asked to be executed and executes them using The Filter package in this project.
     * @param evt
     */
    private void filter_execute_buttonActionPerformed(java.awt.event.ActionEvent evt) throws FileNotFoundException {//GEN-FIRST:event_filter_execute_buttonActionPerformed
        // TODO add your handling code here:
    	ArrayList<Row> all_dataCopy = new ArrayList<Row>();
    	all_dataCopy=Csv.copy_csv(all_data);
    	
    	if (Time_And.isSelected()){
    		String and_start = Start_time_filter.getText();
    		Time and_s_time = new Time();
    		String and_end = End_Time_filter.getText();
    		Time and_e_time = new Time();
    		and_s_time.setDATE(and_start);
    		and_e_time.setDATE(and_end);
			FilterTime.filterAND_by_Time(all_dataCopy, and_s_time, and_e_time);
    	}
    	
    	if (Time_Not.isSelected()){
    		String not_start = Start_time_filter.getText();
    		Time not_s_time = new Time();
    		String not_end = End_Time_filter.getText();
    		Time not_e_time = new Time();
    		not_s_time.setDATE(not_start);
    		not_e_time.setDATE(not_end);
			FilterTime.filterNOT_by_Time(all_dataCopy, not_s_time, not_e_time);

    	}
    	
    	if (Id_And.isSelected()){
    		String and_id = id_filter.getText();
    		FilterID.filterAND_by_ID(all_dataCopy, and_id);
    	}
    	
    	if (Id_Not.isSelected()){
    		String not_id = id_filter.getText();
    		FilterID.filterNOT_by_ID(all_dataCopy, not_id);	
    	}
    	
    	if (Location_And.isSelected()){
    		double rad = Double.parseDouble(radius_units.getText());
    		double lat = Double.parseDouble(location_lat_filter.getText());
    		double lon = Double.parseDouble(location_lon_filter.getText());
    		//double alt = Double.parseDouble(location_alt_filter.getText());
    		FilterLocation.filterNOT_by_Location(all_dataCopy, lat, lon, rad);
    	}
    	
    	if (Location_Not.isSelected()){
    		double not_rad = Double.parseDouble(radius_units.getText());
    		double not_lat = Double.parseDouble(location_lat_filter.getText());
    		double not_lon = Double.parseDouble(location_lon_filter.getText());
    		//double not_alt = Double.parseDouble(location_alt_filter.getText());
    		FilterLocation.filterNOT_by_Location(all_dataCopy, not_lat, not_lon, not_rad);
    		
    	}
    	
    	Csv.pass_to_file(all_dataCopy, all_dataPath);
    	
    }//GEN-LAST:event_filter_execute_buttonActionPerformed

    /**
     * This function connects the GUI in the "SQL" panel to the relevant class in our project, SQL, and executes reading from the wanted table inserted by the user.
     * @param evt
     */
    private void sql_executeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sql_executeActionPerformed
        // TODO add your handling code here:
    	String[] args = {ip_sql.getText(), port_sql.getText(), user_sql.getText(), password_sql.getText(), db_name.getText(), table_name.getText()}; 
    	ArrayList<Row> tableFromDB = new ArrayList<Row>();
    	tableFromDB = SQL_Data.read_db(args);
    	for (int i=0; i<tableFromDB.size(); i++){
    		all_data.add(tableFromDB.get(i));
    	}
    	String request = ip_sql.getText()+","+port_sql.getText()+","+user_sql.getText()+","+password_sql.getText()+","+db_name.getText()+","+table_name.getText();
    	table.putIfAbsent(request, SQL_Data.TimeUPDATE(request.split(",")));
    	System.out.println(table.toString());
    	Csv.pass_to_file(all_data,all_dataPath);
    	
    }//GEN-LAST:event_sql_executeActionPerformed

    /**
     * Main of our GUI - Contains our threads, thread classes, and all relevant variables for GUI.
Note that there are three threads - one for folders updated, one for files that have been updated and the third was added for the DB table updating.
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(geo_wifi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(geo_wifi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(geo_wifi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(geo_wifi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
           public void run() {
                new geo_wifi().setVisible(true);
            }
        });
        Thread folder_thread = new FolderThread();
        folder_thread.start();
        Thread files_thread = new FilesThread();
        files_thread.start();
        table.put("005.029.193.052,3306,oop1,Lambda1();,oop_course_ariel,ex4_db", "f");
        Thread table_thread = new TableThread();
        table_thread.start();
        //--------------------------------------------------------------------------------------------------------------
      
    }
    
    
    
  //Global HashMap declarations for our threads.
    private static Map<String,String> folder = new HashMap<>();
    private static Map<String,String> files = new HashMap<>();
    private static Map<String,String> table = new HashMap<>();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Algorithm;
    private javax.swing.JFormattedTextField End_Time_filter;
    private javax.swing.JButton Execute_Algo1;
    private javax.swing.JButton Execute_Algo2_Macs;
    private javax.swing.JButton Execute_Algo2_Row;
    private javax.swing.JPanel Filter;
    private javax.swing.JRadioButton Id_And;
    private javax.swing.ButtonGroup Id_Group;
    private javax.swing.JRadioButton Id_Not;
    private javax.swing.JRadioButton Id_NotUse;
    private javax.swing.JPanel Input_Output;
    private javax.swing.JRadioButton Location_And;
    private javax.swing.ButtonGroup Location_Group;
    private javax.swing.JRadioButton Location_Not;
    private javax.swing.JRadioButton Location_NotUse;
    private javax.swing.JPanel SQL;
    private javax.swing.JFormattedTextField Start_time_filter;
    private javax.swing.JTabbedPane TabbedPanel;
    private javax.swing.JRadioButton Time_And;
    private javax.swing.ButtonGroup Time_Group;
    private javax.swing.JRadioButton Time_Not;
    private javax.swing.JRadioButton Time_NotUse;
    private javax.swing.JButton add_csv_file_button;
    private javax.swing.JButton add_wigle_files_button;
    private javax.swing.JTextField alt_output_field;
    private javax.swing.JTextField csv_file_path_save;
    private javax.swing.JTextField db_name;
    private javax.swing.JButton empty_file_button;
    private javax.swing.JButton filter_execute_button;
    private javax.swing.JTextField filter_info;
    private javax.swing.JFormattedTextField id_filter;
    private javax.swing.JFormattedTextField ip_sql;
    private javax.swing.JLabel jBkjdkh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel_ip;
    private javax.swing.JTextField kml_path_file_save;
    private javax.swing.JTextField lat_output_field;
    private javax.swing.JFormattedTextField location_alt_filter;
    private javax.swing.JFormattedTextField location_lat_filter;
    private javax.swing.JFormattedTextField location_lon_filter;
    private javax.swing.JTextField lon_output_field;
    private javax.swing.JFormattedTextField mac1;
    private javax.swing.JFormattedTextField mac2;
    private javax.swing.JFormattedTextField mac3;
    private javax.swing.JFormattedTextField mac_Algo1;
    private static javax.swing.JTextField num_of_access_points;
    private static javax.swing.JTextField num_rows;
    private javax.swing.JTextField password_sql;
    private javax.swing.JTextField path_csv_file;
    private javax.swing.JTextField path_wigle_files;
    private javax.swing.JFormattedTextField port_sql;
    private javax.swing.JFormattedTextField radius_units;
    private javax.swing.JTextField row_from_gui;
    private javax.swing.JButton save_as_kml_button;
    private javax.swing.JButton save_as_unified_button;
    private javax.swing.JFormattedTextField signal1;
    private javax.swing.JFormattedTextField signal2;
    private javax.swing.JFormattedTextField signal3;
    private javax.swing.JButton sql_execute;
    private javax.swing.JTextField table_name;
    private javax.swing.JTextField user_sql;
    
    
    private static class TableThread extends Thread{
    	//constructor
    	public TableThread(){
    	}
    	@Override
    	public void run(){
    		while (true){
    			for (Map.Entry<String, String> pair : table.entrySet()) {
    				if (!(SQL_Data.TimeUPDATE(pair.getKey().split(","))).equals(pair.getValue())){
    					ArrayList<Row> tableFromDB = new ArrayList<Row>();
    			    	tableFromDB = SQL_Data.read_db(pair.getKey().split(","));
    			    	for (int i=0; i<tableFromDB.size(); i++){
    			    		all_data.add(tableFromDB.get(i));
    			    	}
    			    	Csv.pass_to_file(all_data,all_dataPath);
    			    	table.replace(pair.getKey(), SQL_Data.TimeUPDATE(pair.getKey().split(",")));	
    				}
    			}
    			
    		}
    	}


}
    
    // End of variables declaration//GEN-END:variables
    private static class FolderThread extends Thread{
    	//constructor
    	public FolderThread(){
    	}
    	@Override
    	public void run(){
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
    		while (true){
    			for (Map.Entry<String, String> pair : folder.entrySet()) {
    				File file = new File(pair.getKey());
    				if (!(file.exists())){
    					folder.remove(pair.getKey());
    				}
    				else{
    					if (!(sdf.format(file.lastModified()).equals(pair.getValue()))){
    						toAddFolder(pair.getKey(), "thread");
    						folder.replace(pair.getKey(), sdf.format(file.lastModified()));
    					}
    				}
    			}
    		}
    	}
    }
    
    private static class FilesThread extends Thread{
    	//constructor
    	public FilesThread(){
    	}
    	@Override
    	public void run(){
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
    		while (true){
    			for (Map.Entry<String, String> pair : files.entrySet()) {
    				File file = new File(pair.getKey());
    				if (!(file.exists())){
    					files.remove(pair.getKey());
    				}
    				else{
    					if (!(sdf.format(file.lastModified()).equals(pair.getValue()))){
    						toAddFile(pair.getKey(), "thread");
    						files.replace(pair.getKey(), sdf.format(file.lastModified()));
    					}
    				}
    			}
    		}
    	}
    }
}
